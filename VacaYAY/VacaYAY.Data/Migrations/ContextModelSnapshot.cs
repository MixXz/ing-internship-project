// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacaYAY.Data;

#nullable disable

namespace VacaYAY.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VacaYAY.Data.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("DaysOfNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EmployeeEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EmployeeStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FristName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasAlternateKey("Email");

                    b.HasIndex("Email");

                    b.HasIndex("PositionID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.LeaveType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("LeaveTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LeaveTypeID");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("ID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Request", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedByID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Response", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<int>("RequstID")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewedByID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LeaveTypeID");

                    b.HasIndex("RequstID")
                        .IsUnique();

                    b.HasIndex("ReviewedByID");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Employee", b =>
                {
                    b.HasOne("VacaYAY.Data.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.LeaveType", b =>
                {
                    b.HasOne("VacaYAY.Data.Entities.LeaveType", null)
                        .WithMany("Responses")
                        .HasForeignKey("LeaveTypeID");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Request", b =>
                {
                    b.HasOne("VacaYAY.Data.Entities.Employee", "CreatedBy")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("CreatedByID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Response", b =>
                {
                    b.HasOne("VacaYAY.Data.Entities.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeID");

                    b.HasOne("VacaYAY.Data.Entities.Request", "Request")
                        .WithOne("Response")
                        .HasForeignKey("VacaYAY.Data.Entities.Response", "RequstID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacaYAY.Data.Entities.Employee", "ReviewedBy")
                        .WithMany()
                        .HasForeignKey("ReviewedByID");

                    b.Navigation("LeaveType");

                    b.Navigation("Request");

                    b.Navigation("ReviewedBy");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Employee", b =>
                {
                    b.Navigation("LeaveRequests");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.LeaveType", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("VacaYAY.Data.Entities.Request", b =>
                {
                    b.Navigation("Response");
                });
#pragma warning restore 612, 618
        }
    }
}
